println "app start"

apply plugin: 'com.android.application'

//获取当前时间（年月日）这两个东西在后面可能会用到
def releaseTime() {
    return new Date().format("yyyy_MM_dd", TimeZone.getTimeZone("UTC"))
}
//获取当前时间（时分秒）
def releaseTime2() {
    return new Date().format("HH_mm", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 25
    buildToolsVersion '27.0.3'

    signingConfigs {
        debug {
            storeFile file('E:/Android_workspace/GitHub/XiaYuanDongTest/store/xyd_store.jks')
            storePassword "123456"
            keyAlias "xyd"
            keyPassword "123456"
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            storeFile file('E:/Android_workspace/GitHub/XiaYuanDongTest/store/xyd_store.jks')
            storePassword "123456"
            keyAlias "xyd"
            keyPassword "123456"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    defaultConfig {
        applicationId "xyd.com.xiayuandongtest"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        //配置demension
        flavorDimensions  "pack"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //根据需要 自行选择添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [

                XG_ACCESS_ID : "2100278393",
                XG_ACCESS_KEY: "A5N24PE8TY8A",
        ]
    }
    productFlavors{
        tencent{
            applicationId  "xyd.com.xiayuandongtest"
            dimension "pack"
            manifestPlaceholders = [appName: "tencent"]
        }
    }

    buildTypes {
        xyd {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    //打包时自动生成文件名
    //定义一个装apk文件路径的数组
    def fileArray = []
    applicationVariants.all { variant ->
        //判断是release还是debug版本
        def buildType = variant.buildType.name
        //获取当前时间的"YYYY-MM-dd"格式。
        def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
        //如果是正式包,将其输入到指定文件夹
        if (buildType == "release") {
            variant.getPackageApplication().outputDirectory = new File('E:\\Android_workspace\\GitHub\\XiaYuanDongTest\\app\\APK'+ "/${it.productFlavors[0].applicationId}/${createTime}")
        }
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                // 输出apk名称为boohee_v1.0_2015-01-15_wandoujia.apk
                def fileName = "你的项目名称_ver${defaultConfig.versionName}_${releaseTime()}.apk"
//                output.outputFile = new File(output.outputFile.parent, fileName)
//                outputFile = outputFile.name.replaceAll(".apk", fileName)
                outputFileName = fileName //Android studio 3.+ 版本需要这样设置
            }
        }
    }



}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:25.3.1'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.yanzhenjie:permission:1.1.2'
    implementation 'com.android.support:design:25.3.1'
    //完整的信鸽依赖三个都必须有，如果发生依赖冲突请根据对应的依赖版本号选择高版本的依赖。（使用jcenter自动接入请确认libs 中没有信鸽的相关jar包）
    //信鸽3.2.2 release版本
    //完整的信鸽依赖三个都必须有，如果发生依赖冲突请根据对应的依赖版本号选择高版本的依赖。（使用jcenter自动接入请                    确认libs 中没有信鸽的相关jar包）
    //信鸽jar
    implementation 'com.tencent.xinge:xinge:3.2.2-release'
    //wup包
    implementation 'com.tencent.wup:wup:1.0.0.E-release'
    //mid包
    implementation 'com.tencent.mid:mid:4.0.6-release'
    //动画兼容库
    implementation 'com.daimajia.easing:library:2.0@aar'
    implementation 'com.daimajia.androidanimations:library:2.3@aar'
    implementation 'com.blankj:utilcode:1.15.1'
    //    implementation 'io.reactivex:rxandroid:1.2.1'
    //    implementation 'io.reactivex:rxjava:1.1.6'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.14-RC1'
}
println "app end"
